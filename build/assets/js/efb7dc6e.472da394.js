"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6095],{5680:(n,e,r)=>{r.d(e,{xA:()=>u,yg:()=>y});var t=r(6540);function a(n,e,r){return e in n?Object.defineProperty(n,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):n[e]=r,n}function s(n,e){var r=Object.keys(n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(n);e&&(t=t.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.push.apply(r,t)}return r}function o(n){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?s(Object(r),!0).forEach((function(e){a(n,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(r,e))}))}return n}function i(n,e){if(null==n)return{};var r,t,a=function(n,e){if(null==n)return{};var r,t,a={},s=Object.keys(n);for(t=0;t<s.length;t++)r=s[t],e.indexOf(r)>=0||(a[r]=n[r]);return a}(n,e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(n);for(t=0;t<s.length;t++)r=s[t],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(n,r)&&(a[r]=n[r])}return a}var l=t.createContext({}),c=function(n){var e=t.useContext(l),r=e;return n&&(r="function"==typeof n?n(e):o(o({},e),n)),r},u=function(n){var e=c(n.components);return t.createElement(l.Provider,{value:e},n.children)},p="mdxType",m={inlineCode:"code",wrapper:function(n){var e=n.children;return t.createElement(t.Fragment,{},e)}},f=t.forwardRef((function(n,e){var r=n.components,a=n.mdxType,s=n.originalType,l=n.parentName,u=i(n,["components","mdxType","originalType","parentName"]),p=c(r),f=a,y=p["".concat(l,".").concat(f)]||p[f]||m[f]||s;return r?t.createElement(y,o(o({ref:e},u),{},{components:r})):t.createElement(y,o({ref:e},u))}));function y(n,e){var r=arguments,a=e&&e.mdxType;if("string"==typeof n||a){var s=r.length,o=new Array(s);o[0]=f;var i={};for(var l in e)hasOwnProperty.call(e,l)&&(i[l]=e[l]);i.originalType=n,i[p]="string"==typeof n?n:a,o[1]=i;for(var c=2;c<s;c++)o[c]=r[c];return t.createElement.apply(null,o)}return t.createElement.apply(null,r)}f.displayName="MDXCreateElement"},7855:(n,e,r)=>{r.r(e),r.d(e,{contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var t=r(8168),a=(r(6540),r(5680));const s={},o=void 0,i={unversionedId:"function/searchPrams",id:"function/searchPrams",isDocsHomePage:!1,title:"searchPrams",description:"`js",source:"@site/docs/function/searchPrams.md",sourceDirName:"function",slug:"/function/searchPrams",permalink:"/docs/function/searchPrams",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/function/searchPrams.md",version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"\u5b89\u88c5Docker\u8f6f\u4ef6",permalink:"/docs/docker/\u5b89\u88c5Docker\u8f6f\u4ef6"},next:{title:"JavaScript\u9ad8\u7ea7\u6280\u5de7",permalink:"/docs/javascript/JavaScript\u9ad8\u7ea7\u6280\u5de7"}},l=[],c={toc:l},u="wrapper";function p(n){let{components:e,...r}=n;return(0,a.yg)(u,(0,t.A)({},c,r,{components:e,mdxType:"MDXLayout"}),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},"\nclass MyURLSearchParams {\n    /**\n     * @params {string} init\n     */\n    constructor(init) {\n        this.map = new Map();\n        init = init[0] === '?' ? init.slice(1) : init;\n        const paramArr = init.split('&') ?? [];\n        //  console.log(paramStr);\n        for (let i in paramArr) {\n            const [key, value] = paramArr[i].split('=');\n            const curArr = this.map.get(key) || [];\n            this.map.set(key, [...curArr, String(value)]);\n        }\n    }\n\n    /** \n     * @params {string} name\n     * @params {any} value\n     */\n    append (name, value) {\n        this.map.get(name).push(String(value));\n    }\n\n    /**\n     * @params {string} name\n     */\n    delete (name) {\n        this.map.delete(name);\n    }\n\n    /**\n     * @returns {Iterator} \n     */\n    * entries () {\n        for (let [key, values] of this.map) {\n            for (let value of values) {\n                yield [key, value];\n            }\n        }\n    }\n\n    /**\n     * @param {(value, key) => void} callback\n     */\n    forEach (callback) {\n        for (let [key, values] of this.map) {\n            for (let value of values) {\n                callback(value, key);\n            }\n        }\n    }\n\n    /**\n     * @param {string} name\n     * returns the first value of the name\n     */\n    get (name) {\n        return this.map.has(name) ? this.map.get(name)[0] : null;\n    }\n\n    /**\n     * @param {string} name\n     * @return {string[]}\n     * returns the value list of the name\n     */\n    getAll (name) {\n        return this.map.get(name) ?? [];\n    }\n\n    /**\n     * @params {string} name\n     * @return {boolean}\n     */\n    has (name) {\n        return !!this.map.has(name);\n    }\n\n    /**\n     * @return {Iterator}\n     */\n    keys () {\n        return this.map.keys();\n    }\n\n    /**\n     * @param {string} name\n     * @param {any} value\n     */\n    set (name, value) {\n        this.map.set(name, [String(value)]);\n    }\n\n    // sor all key/value pairs based on the keys\n    sort () {\n        this.map = new Map([...this.map.entries()].sort())\n    }\n\n    /**\n     * @return {string}\n     */\n    toString () {\n        let paramStr = '';\n        for (let [key, values] of this.map) {\n            for (let value of values) {\n                paramStr += `${key}=${value}&`;\n            }\n        }\n        return paramStr.slice(0, paramStr.length - 1);\n    }\n\n    /**\n     * @return {Iterator} values\n     */\n    * values () {\n        for (let [_, values] of this.map) {\n            for (const value of values) {\n                yield value\n            }\n        }\n    }\n}\nconst params = new MyURLSearchParams('?a=1&a=2&b=2')\n\nparams.getAll()\n")))}p.isMDXComponent=!0}}]);