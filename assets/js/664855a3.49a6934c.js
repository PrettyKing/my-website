"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1533],{145:(n,t,e)=>{e.r(t),e.d(t,{contentTitle:()=>o,default:()=>l,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var r=e(8168),i=(e(6540),e(5680));const a={title:"C\u8bed\u8a00\u901f\u6210",date:new Date("2021-01-20T00:00:00.000Z"),tags:["tools"],categories:["\u5de5\u5177\u4eba"]},o="[X\u5206\u949f\u901f\u6210Y](https://learnxinyminutes.com/)",s={unversionedId:"other/C",id:"other/C",isDocsHomePage:!1,title:"C\u8bed\u8a00\u901f\u6210",description:"\u5176\u4e2d Y=c",source:"@site/docs/other/C.md",sourceDirName:"other",slug:"/other/C",permalink:"/my-website/docs/other/C",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/other/C.md",version:"current",frontMatter:{title:"C\u8bed\u8a00\u901f\u6210",date:"2021-01-20T00:00:00.000Z",tags:["tools"],categories:["\u5de5\u5177\u4eba"]},sidebar:"defaultSidebar",previous:{title:"\u6027\u80fd\u4f18\u5316(\u4e09)",permalink:"/my-website/docs/optimize/performance-optimization-3"},next:{title:"C++ \u901f\u6210",permalink:"/my-website/docs/other/CPP"}},c=[{value:"\u5176\u4e2d Y=c",id:"\u5176\u4e2d-yc",children:[]},{value:"\u66f4\u591a\u9605\u8bfb",id:"\u66f4\u591a\u9605\u8bfb",children:[]}],f={toc:c},p="wrapper";function l(n){let{components:t,...e}=n;return(0,i.yg)(p,(0,r.A)({},f,e,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"x\u5206\u949f\u901f\u6210y"},(0,i.yg)("a",{parentName:"h1",href:"https://learnxinyminutes.com/"},"X\u5206\u949f\u901f\u6210Y")),(0,i.yg)("h2",{id:"\u5176\u4e2d-yc"},"\u5176\u4e2d Y=c"),(0,i.yg)("p",null,"\u6e90\u4ee3\u7801\u4e0b\u8f7d\uff1a ",(0,i.yg)("a",{parentName:"p",href:"https://learnxinyminutes.com/docs/files/learnc-cn.c"},"learnc-cn.c")),(0,i.yg)("p",null,"C\u8bed\u8a00\u5728\u4eca\u5929\u4ecd\u7136\u662f\u9ad8\u6027\u80fd\u8ba1\u7b97\u7684\u4e3b\u8981\u9009\u62e9\u3002"),(0,i.yg)("p",null,"C\u5927\u6982\u662f\u5927\u591a\u6570\u7a0b\u5e8f\u5458\u7528\u5230\u7684\u6700\u63a5\u8fd1\u5e95\u5c42\u7684\u8bed\u8a00\u4e86\uff0cC\u8bed\u8a00\u539f\u751f\u7684\u901f\u5ea6\u5c31\u5f88\u9ad8\u4e86\uff0c\u4f46\u662f\u522b\u5fd8\u4e86C\u7684\u624b\u52a8\u5185\u5b58\u7ba1\u7406\uff0c\u5b83\u4f1a\u8ba9\u4f60\u5c06\u6027\u80fd\u53d1\u6325\u5230\u6781\u81f4\u3002"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-c"},'// \u5355\u884c\u6ce8\u91ca\u4ee5//\u5f00\u59cb\u3002\uff08\u4ec5\u9002\u7528\u4e8eC99\u6216\u66f4\u65b0\u7684\u7248\u672c\u3002\uff09\n\n/*\n\u591a\u884c\u6ce8\u91ca\u662f\u8fd9\u4e2a\u6837\u5b50\u7684\u3002\uff08C89\u4e5f\u9002\u7528\u3002\uff09\n*/\n\n// \u5e38\u6570\uff1a #define \u5173\u952e\u8bcd\n#define DAYS_IN_YEAR 365\n\n// \u4ee5\u679a\u4e3e\u7684\u65b9\u5f0f\u5b9a\u4e49\u5e38\u6570\nenum days {SUN = 1, MON, TUE, WED, THU, FRI, SAT};\n// MON\u81ea\u52a8\u88ab\u5b9a\u4e49\u4e3a2\uff0cTUE\u88ab\u5b9a\u4e49\u4e3a3\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\n\n// \u7528#include\u6765\u5bfc\u5165\u5934\u6587\u4ef6\n#include <stdlib.h>\n#include <stdio.h>\n#include <string.h>\n\n// <\u5c16\u62ec\u53f7>\u95f4\u7684\u6587\u4ef6\u540d\u662fC\u6807\u51c6\u5e93\u7684\u5934\u6587\u4ef6\u3002\n// \u6807\u51c6\u5e93\u4ee5\u5916\u7684\u5934\u6587\u4ef6\uff0c\u4f7f\u7528\u53cc\u5f15\u53f7\u4ee3\u66ff\u5c16\u62ec\u53f7\u3002\n#include "my_header.h"\n\n// \u51fd\u6570\u7684\u7b7e\u540d\u53ef\u4ee5\u4e8b\u5148\u5728.h\u6587\u4ef6\u4e2d\u5b9a\u4e49\uff0c\n// \u4e5f\u53ef\u4ee5\u76f4\u63a5\u5728.c\u6587\u4ef6\u7684\u5934\u90e8\u5b9a\u4e49\u3002\nvoid function_1(char c);\nvoid function_2(void);\n\n// \u5982\u679c\u51fd\u6570\u8c03\u7528\u5728main()\u4e4b\u540e\uff0c\u90a3\u4e48\u5fc5\u987b\u58f0\u660e\u5728main()\u4e4b\u524d\n// \u5148\u58f0\u660e\u4e00\u4e2a\u51fd\u6570\u539f\u578b\nint add_two_ints(int x1, int x2); // \u51fd\u6570\u539f\u578b\n\n// \u4f60\u7684\u7a0b\u5e8f\u7684\u5165\u53e3\u662f\u4e00\u4e2a\u8fd4\u56de\u503c\u4e3a\u6574\u578b\u7684main\u51fd\u6570\nint main() {\n\n// \u7528printf\u6253\u5370\u5230\u6807\u51c6\u8f93\u51fa\uff0c\u53ef\u4ee5\u8bbe\u5b9a\u683c\u5f0f\uff0c\n// %d \u4ee3\u8868\u6574\u6570, \\n \u4ee3\u8868\u6362\u884c\nprintf("%d\\n", 0); // => \u6253\u5370 0\n// \u6240\u6709\u7684\u8bed\u53e5\u90fd\u8981\u4ee5\u5206\u53f7\u7ed3\u675f\n\n///////////////////////////////////////\n// \u7c7b\u578b\n///////////////////////////////////////\n\n// \u5728\u4f7f\u7528\u53d8\u91cf\u4e4b\u524d\u6211\u4eec\u5fc5\u987b\u5148\u58f0\u660e\u5b83\u4eec\u3002\n// \u53d8\u91cf\u5728\u58f0\u660e\u65f6\u9700\u8981\u6307\u660e\u5176\u7c7b\u578b\uff0c\u800c\u7c7b\u578b\u80fd\u591f\u544a\u8bc9\u7cfb\u7edf\u8fd9\u4e2a\u53d8\u91cf\u6240\u5360\u7528\u7684\u7a7a\u95f4\n\n// int\u578b\uff08\u6574\u578b\uff09\u53d8\u91cf\u4e00\u822c\u5360\u75284\u4e2a\u5b57\u8282\nint x_int = 0;\n\n// short\u578b\uff08\u77ed\u6574\u578b\uff09\u53d8\u91cf\u4e00\u822c\u5360\u75282\u4e2a\u5b57\u8282\nshort x_short = 0;\n\n// char\u578b\uff08\u5b57\u7b26\u578b\uff09\u53d8\u91cf\u4f1a\u5360\u75281\u4e2a\u5b57\u8282\nchar x_char = 0;\nchar y_char = \'y\'; // \u5b57\u7b26\u53d8\u91cf\u7684\u5b57\u9762\u503c\u9700\u8981\u7528\u5355\u5f15\u53f7\u5305\u4f4f\n\n// long\u578b\uff08\u957f\u6574\u578b\uff09\u4e00\u822c\u9700\u89814\u4e2a\u5b57\u8282\u52308\u4e2a\u5b57\u8282; \u800clong long\u578b\u5219\u81f3\u5c11\u9700\u89818\u4e2a\u5b57\u8282\uff0864\u4f4d\uff09\n\nlong x_long = 0;\nlong long x_long_long = 0; \n\n// float\u4e00\u822c\u662f\u752832\u4f4d\u8868\u793a\u7684\u6d6e\u70b9\u6570\u5b57\nfloat x_float = 0.0;\n\n// double\u4e00\u822c\u662f\u752864\u4f4d\u8868\u793a\u7684\u6d6e\u70b9\u6570\u5b57\ndouble x_double = 0.0;\n\n// \u6574\u6570\u7c7b\u578b\u4e5f\u53ef\u4ee5\u6709\u65e0\u7b26\u53f7\u7684\u7c7b\u578b\u8868\u793a\u3002\u8fd9\u6837\u8fd9\u4e9b\u53d8\u91cf\u5c31\u65e0\u6cd5\u8868\u793a\u8d1f\u6570\n// \u4f46\u662f\u65e0\u7b26\u53f7\u6574\u6570\u6240\u80fd\u8868\u793a\u7684\u8303\u56f4\u5c31\u53ef\u4ee5\u6bd4\u539f\u6765\u7684\u6574\u6570\u5927\u4e00\u4e9b\n\nunsigned short ux_short;\nunsigned int ux_int;\nunsigned long long ux_long_long;\n\n// \u5355\u5f15\u53f7\u5185\u7684\u5b57\u7b26\u662f\u673a\u5668\u7684\u5b57\u7b26\u96c6\u4e2d\u7684\u6574\u6570\u3002\n\'0\' // => \u5728ASCII\u5b57\u7b26\u96c6\u4e2d\u662f48\n\'A\' // => \u5728ASCII\u5b57\u7b26\u96c6\u4e2d\u662f65\n\n// char\u7c7b\u578b\u4e00\u5b9a\u4f1a\u5360\u75281\u4e2a\u5b57\u8282\uff0c\u4f46\u662f\u5176\u4ed6\u7684\u7c7b\u578b\u5374\u4f1a\u56e0\u5177\u4f53\u673a\u5668\u7684\u4e0d\u540c\u800c\u5404\u5f02\n// sizeof(T) \u53ef\u4ee5\u8fd4\u56deT\u7c7b\u578b\u5728\u8fd0\u884c\u7684\u673a\u5668\u4e0a\u5360\u7528\u591a\u5c11\u4e2a\u5b57\u8282 \n// \u8fd9\u6837\u4f60\u7684\u4ee3\u7801\u5c31\u53ef\u4ee5\u5728\u5404\u5904\u6b63\u786e\u8fd0\u884c\u4e86\n// sizeof(obj)\u8fd4\u56de\u8868\u8fbe\u5f0f\uff08\u53d8\u91cf\u3001\u5b57\u9762\u91cf\u7b49\uff09\u7684\u5c3a\u5bf8\nprintf("%zu\\n", sizeof(int)); // => 4 (\u5927\u591a\u6570\u7684\u673a\u5668\u5b57\u957f\u4e3a4)\n\n// \u5982\u679c`sizeof`\u7684\u53c2\u6570\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u90a3\u4e48\u8fd9\u4e2a\u53c2\u6570\u4e0d\u4f1a\u88ab\u6f14\u7b97\uff08VLA\u4f8b\u5916\uff0c\u89c1\u4e0b\uff09\n// \u5b83\u4ea7\u751f\u7684\u503c\u662f\u7f16\u8bd1\u671f\u7684\u5e38\u6570\nint a = 1;\n// size_t\u662f\u4e00\u4e2a\u65e0\u7b26\u53f7\u6574\u578b\uff0c\u8868\u793a\u5bf9\u8c61\u7684\u5c3a\u5bf8\uff0c\u81f3\u5c112\u4e2a\u5b57\u8282\nsize_t size = sizeof(a++); // a++ \u4e0d\u4f1a\u88ab\u6f14\u7b97\nprintf("sizeof(a++) = %zu where a = %d\\n", size, a);\n// \u6253\u5370 "sizeof(a++) = 4 where a = 1" \uff08\u572832\u4f4d\u67b6\u6784\u4e0a\uff09\n\n// \u6570\u7ec4\u5fc5\u987b\u8981\u88ab\u521d\u59cb\u5316\u4e3a\u5177\u4f53\u7684\u957f\u5ea6\nchar my_char_array[20]; // \u8fd9\u4e2a\u6570\u7ec4\u5360\u636e 1 * 20 = 20 \u4e2a\u5b57\u8282\nint my_int_array[20]; // \u8fd9\u4e2a\u6570\u7ec4\u5360\u636e 4 * 20 = 80 \u4e2a\u5b57\u8282\n                      // (\u8fd9\u91cc\u6211\u4eec\u5047\u8bbe\u5b57\u957f\u4e3a4)\n\n\n// \u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u65b9\u6cd5\u628a\u6570\u7ec4\u521d\u59cb\u5316\u4e3a0:\nchar my_array[20] = {0};\n\n// \u7d22\u5f15\u6570\u7ec4\u548c\u5176\u4ed6\u8bed\u8a00\u7c7b\u4f3c -- \u597d\u5427\uff0c\u5176\u5b9e\u662f\u5176\u4ed6\u7684\u8bed\u8a00\u50cfC\nmy_array[0]; // => 0\n\n// \u6570\u7ec4\u662f\u53ef\u53d8\u7684\uff0c\u5176\u5b9e\u5c31\u662f\u5185\u5b58\u7684\u6620\u5c04\uff01\nmy_array[1] = 2;\nprintf("%d\\n", my_array[1]); // => 2\n\n// \u5728C99 \uff08C11\u4e2d\u662f\u53ef\u9009\u7279\u6027\uff09\uff0c\u53d8\u957f\u6570\u7ec4\uff08VLA\uff09\u4e5f\u53ef\u4ee5\u58f0\u660e\u957f\u5ea6\u3002\n// \u5176\u957f\u5ea6\u4e0d\u7528\u662f\u7f16\u8bd1\u671f\u5e38\u91cf\u3002\nprintf("Enter the array size: "); // \u8be2\u95ee\u7528\u6237\u6570\u7ec4\u957f\u5ea6\nchar buf[0x100];\nfgets(buf, sizeof buf, stdin);\n\n// stroul \u5c06\u5b57\u7b26\u4e32\u89e3\u6790\u4e3a\u65e0\u7b26\u53f7\u6574\u6570\nsize_t size = strtoul(buf, NULL, 10);\nint var_length_array[size]; // \u58f0\u660eVLA\nprintf("sizeof array = %zu\\n", sizeof var_length_array);\n\n// \u4e0a\u8ff0\u7a0b\u5e8f\u53ef\u80fd\u7684\u8f93\u51fa\u4e3a\uff1a\n// > Enter the array size: 10\n// > sizeof array = 40\n\n// \u5b57\u7b26\u4e32\u5c31\u662f\u4ee5 NUL (0x00) \u8fd9\u4e2a\u5b57\u7b26\u7ed3\u5c3e\u7684\u5b57\u7b26\u6570\u7ec4,\n// NUL\u53ef\u4ee5\u7528\'\\0\'\u6765\u8868\u793a.\n// (\u5728\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u4e2d\u6211\u4eec\u4e0d\u5fc5\u8f93\u5165\u8fd9\u4e2a\u5b57\u7b26\uff0c\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u6dfb\u52a0\u7684)\nchar a_string[20] = "This is a string";\nprintf("%s\\n", a_string); // %s \u53ef\u4ee5\u5bf9\u5b57\u7b26\u4e32\u8fdb\u884c\u683c\u5f0f\u5316\n/*\n\u4e5f\u8bb8\u4f60\u4f1a\u6ce8\u610f\u5230 a_string \u5b9e\u9645\u4e0a\u53ea\u670916\u4e2a\u5b57\u8282\u957f.\n\u7b2c17\u4e2a\u5b57\u8282\u662f\u4e00\u4e2a\u7a7a\u5b57\u7b26(NUL) \n\u800c\u7b2c18, 19 \u548c 20 \u4e2a\u5b57\u7b26\u7684\u503c\u662f\u672a\u5b9a\u4e49\u3002\n*/\n\nprintf("%d\\n", a_string[16]); // => 0\n//  byte #17\u503c\u4e3a0\uff0818\uff0c19\uff0c20\u540c\u6837\u4e3a0\uff09\n\n// \u5355\u5f15\u53f7\u95f4\u7684\u5b57\u7b26\u662f\u5b57\u7b26\u5b57\u9762\u91cf\n// \u5b83\u7684\u7c7b\u578b\u662f`int`\uff0c\u800c *\u4e0d\u662f* `char`\n// \uff08\u7531\u4e8e\u5386\u53f2\u539f\u56e0\uff09\nint cha = \'a\'; // \u5408\u6cd5\nchar chb = \'a\'; // \u540c\u6837\u5408\u6cd5 (\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\n\n// \u591a\u7ef4\u6570\u7ec4\nint multi_array[2][5] = {\n        {1, 2, 3, 4, 5},\n        {6, 7, 8, 9, 0}\n    }\n// \u83b7\u53d6\u5143\u7d20\nint array_int = multi_array[0][2]; // => 3\n\n///////////////////////////////////////\n// \u64cd\u4f5c\u7b26\n///////////////////////////////////////\n\n// \u591a\u4e2a\u53d8\u91cf\u58f0\u660e\u7684\u7b80\u5199\nint i1 = 1, i2 = 2;\nfloat f1 = 1.0, f2 = 2.0;\n\nint a, b, c;\na = b = c = 0;\n\n// \u7b97\u6570\u8fd0\u7b97\u76f4\u622a\u4e86\u5f53\ni1 + i2; // => 3\ni2 - i1; // => 1\ni2 * i1; // => 2\ni1 / i2; // => 0 (0.5\uff0c\u4f46\u4f1a\u88ab\u5316\u6574\u4e3a 0)\n\nf1 / f2; // => 0.5, \u4e5f\u8bb8\u4f1a\u6709\u5f88\u5c0f\u7684\u8bef\u5dee\n// \u6d6e\u70b9\u6570\u548c\u6d6e\u70b9\u6570\u8fd0\u7b97\u90fd\u662f\u8fd1\u4f3c\u503c\n\n// \u53d6\u4f59\u8fd0\u7b97\n11 % 3; // => 2\n\n// \u4f60\u591a\u534a\u4f1a\u89c9\u5f97\u6bd4\u8f83\u64cd\u4f5c\u7b26\u5f88\u719f\u6089, \u4e0d\u8fc7C\u4e2d\u6ca1\u6709\u5e03\u5c14\u7c7b\u578b\n// \u800c\u662f\u7528\u6574\u5f62\u66ff\u4ee3\n// (C99\u4e2d\u6709_Bool\u6216bool\u3002)\n// 0\u4e3a\u5047, \u5176\u4ed6\u5747\u4e3a\u771f. (\u6bd4\u8f83\u64cd\u4f5c\u7b26\u7684\u8fd4\u56de\u503c\u603b\u662f\u8fd4\u56de0\u62161)\n3 == 2; // => 0 (false)\n3 != 2; // => 1 (true)\n3 > 2; // => 1\n3 < 2; // => 0\n2 <= 2; // => 1\n2 >= 2; // => 1\n\n// C\u4e0d\u662fPython \u2014\u2014 \u8fde\u7eed\u6bd4\u8f83\u4e0d\u5408\u6cd5\nint a = 1;\n// \u9519\u8bef\nint between_0_and_2 = 0 < a < 2;\n// \u6b63\u786e\nint between_0_and_2 = 0 < a && a < 2;\n\n// \u903b\u8f91\u8fd0\u7b97\u7b26\u9002\u7528\u4e8e\u6574\u6570\n!3; // => 0 (\u975e)\n!0; // => 1\n1 && 1; // => 1 (\u4e14)\n0 && 1; // => 0\n0 || 1; // => 1 (\u6216)\n0 || 0; // => 0\n\n// \u6761\u4ef6\u8868\u8fbe\u5f0f \uff08 ? : \uff09\nint a = 5;\nint b = 10;\nint z;\nz = (a > b) ? a : b; //  10 \u201c\u82e5a > b\u8fd4\u56dea\uff0c\u5426\u5219\u8fd4\u56deb\u3002\u201d\n\n// \u589e\u3001\u51cf\nchar *s = "iLoveC"\nint j = 0;\ns[j++]; // "i" \u8fd4\u56des\u7684\u7b2cj\u9879\uff0c\u7136\u540e\u589e\u52a0j\u7684\u503c\u3002\nj = 0;\ns[++j]; // => "L"  \u589e\u52a0j\u7684\u503c\uff0c\u7136\u540e\u8fd4\u56des\u7684\u7b2cj\u9879\u3002\n// j-- \u548c --j \u540c\u7406\n\n// \u4f4d\u8fd0\u7b97\n~0x0F; // => 0xF0 (\u53d6\u53cd)\n0x0F & 0xF0; // => 0x00 (\u548c)\n0x0F | 0xF0; // => 0xFF (\u6216)\n0x04 ^ 0x0F; // => 0x0B (\u5f02\u6216)\n0x01 << 1; // => 0x02 (\u5de6\u79fb1\u4f4d)\n0x02 >> 1; // => 0x01 (\u53f3\u79fb1\u4f4d)\n\n// \u5bf9\u6709\u7b26\u53f7\u6574\u6570\u8fdb\u884c\u79fb\u4f4d\u64cd\u4f5c\u8981\u5c0f\u5fc3 \u2014\u2014 \u4ee5\u4e0b\u672a\u5b9a\u4e49\uff1a\n// \u6709\u7b26\u53f7\u6574\u6570\u4f4d\u79fb\u81f3\u7b26\u53f7\u4f4d int a = 1 << 32\n// \u5de6\u79fb\u4f4d\u4e00\u4e2a\u8d1f\u6570 int a = -1 << 2\n// \u79fb\u4f4d\u8d85\u8fc7\u6216\u7b49\u4e8e\u8be5\u7c7b\u578b\u6570\u503c\u7684\u957f\u5ea6\n// int a = 1 << 32; // \u5047\u5b9aint32\u4f4d\n\n\n///////////////////////////////////////\n// \u63a7\u5236\u7ed3\u6784\n///////////////////////////////////////\n\nif (0) {\n  printf("I am never run\\n");\n} else if (0) {\n  printf("I am also never run\\n");\n} else {\n  printf("I print\\n");\n}\n\n// While\u5faa\u73af\nint ii = 0;\nwhile (ii < 10) { // \u4efb\u4f55\u975e0\u7684\u503c\u5747\u4e3a\u771f\n    printf("%d, ", ii++); // ii++ \u5728\u53d6\u503c\u8fc7\u540e\u81ea\u589e\n} // =>  \u6253\u5370 "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, "\n\nprintf("\\n");\n\nint kk = 0;\ndo {\n    printf("%d, ", kk);\n} while (++kk < 10); // ++kk \u5148\u81ea\u589e\uff0c\u518d\u88ab\u53d6\u503c\n// => \u6253\u5370 "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, "\n\nprintf("\\n");\n\n// For \u5faa\u73af\nint jj;\nfor (jj=0; jj < 10; jj++) {\n    printf("%d, ", jj);\n} // => \u6253\u5370 "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, "\n\nprintf("\\n");\n\n// *****\u6ce8\u610f*****:\n// \u5faa\u73af\u548c\u51fd\u6570\u5fc5\u987b\u6709\u4e3b\u4f53\u90e8\u5206\uff0c\u5982\u679c\u4e0d\u9700\u8981\u4e3b\u4f53\u90e8\u5206\uff1a\nint i;\n    for (i = 0; i <= 5; i++) {\n    ; // \u4f7f\u7528\u5206\u53f7\u8868\u8fbe\u4e3b\u4f53\uff08null\u8bed\u53e5\uff09\n}\n\n// \u591a\u91cd\u5206\u652f\uff1aswitch()\nswitch (some_integral_expression) {\ncase 0: // \u6807\u7b7e\u5fc5\u987b\u662f\u6574\u6570\u5e38\u91cf\u8868\u8fbe\u5f0f\n    do_stuff();\n    break; // \u5982\u679c\u4e0d\u4f7f\u7528break\uff0c\u63a7\u5236\u7ed3\u6784\u4f1a\u7ee7\u7eed\u6267\u884c\u4e0b\u9762\u7684\u6807\u7b7e\ncase 1:\n    do_something_else();\n    break;\ndefault:\n    // \u5047\u8bbe `some_integral_expression` \u4e0d\u5339\u914d\u4efb\u4f55\u6807\u7b7e\n    fputs("error!\\n", stderr);\n    exit(-1);\n    break;\n    }\n\n///////////////////////////////////////\n// \u7c7b\u578b\u8f6c\u6362\n///////////////////////////////////////\n\n// \u5728C\u4e2d\u6bcf\u4e2a\u53d8\u91cf\u90fd\u6709\u7c7b\u578b\uff0c\u4f60\u53ef\u4ee5\u5c06\u53d8\u91cf\u7684\u7c7b\u578b\u8fdb\u884c\u8f6c\u6362\n// (\u6709\u4e00\u5b9a\u9650\u5236)\n\nint x_hex = 0x01; // \u53ef\u4ee5\u752816\u8fdb\u5236\u5b57\u9762\u91cf\u8d4b\u503c\n\n// \u5728\u7c7b\u578b\u8f6c\u6362\u65f6\uff0c\u6570\u5b57\u672c\u8eab\u7684\u503c\u4f1a\u88ab\u4fdd\u7559\u4e0b\u6765\nprintf("%d\\n", x_hex); // => \u6253\u5370 1\nprintf("%d\\n", (short) x_hex); // => \u6253\u5370 1\nprintf("%d\\n", (char) x_hex); // => \u6253\u5370 1\n\n// \u7c7b\u578b\u8f6c\u6362\u65f6\u53ef\u80fd\u4f1a\u9020\u6210\u6ea2\u51fa\uff0c\u800c\u4e14\u4e0d\u4f1a\u629b\u51fa\u8b66\u544a\nprintf("%d\\n", (char) 257); // => 1 (char\u7684\u6700\u5927\u503c\u4e3a255\uff0c\u5047\u5b9achar\u4e3a8\u4f4d\u957f)\n\n// \u4f7f\u7528<limits.h>\u63d0\u4f9b\u7684CHAR_MAX\u3001SCHAR_MAX\u548cUCHAR_MAX\u5b8f\u53ef\u4ee5\u786e\u5b9a`char`\u3001`signed_char`\u548c`unisigned char`\u7684\u6700\u5927\u503c\u3002\n\n\n// \u6574\u6570\u578b\u548c\u6d6e\u70b9\u578b\u53ef\u4ee5\u4e92\u76f8\u8f6c\u6362\nprintf("%f\\n", (float)100); // %f \u683c\u5f0f\u5316\u5355\u7cbe\u5ea6\u6d6e\u70b9\nprintf("%lf\\n", (double)100); // %lf \u683c\u5f0f\u5316\u53cc\u7cbe\u5ea6\u6d6e\u70b9\nprintf("%d\\n", (char)100.0);\n\n///////////////////////////////////////\n// \u6307\u9488\n///////////////////////////////////////\n\n// \u6307\u9488\u53d8\u91cf\u662f\u7528\u6765\u50a8\u5b58\u5185\u5b58\u5730\u5740\u7684\u53d8\u91cf\n// \u6307\u9488\u53d8\u91cf\u7684\u58f0\u660e\u4e5f\u4f1a\u544a\u8bc9\u5b83\u6240\u6307\u5411\u7684\u6570\u636e\u7684\u7c7b\u578b\n// \u4f60\u53ef\u4ee5\u4f7f\u7528\u5f97\u5230\u4f60\u7684\u53d8\u91cf\u7684\u5730\u5740\uff0c\u5e76\u628a\u5b83\u4eec\u641e\u4e71\uff0c;-)\n\nint x = 0;\nprintf("%p\\n", &x); // \u7528 & \u6765\u83b7\u53d6\u53d8\u91cf\u7684\u5730\u5740\n// (%p \u683c\u5f0f\u5316\u4e00\u4e2a\u7c7b\u578b\u4e3a void *\u7684\u6307\u9488)\n// => \u6253\u5370\u67d0\u4e2a\u5185\u5b58\u5730\u5740\n\n// \u6307\u9488\u7c7b\u578b\u5728\u58f0\u660e\u4e2d\u4ee5*\u5f00\u5934\nint* px, not_a_pointer; // px\u662f\u4e00\u4e2a\u6307\u5411int\u578b\u7684\u6307\u9488\npx = &x; // \u628ax\u7684\u5730\u5740\u4fdd\u5b58\u5230px\u4e2d\nprintf("%p\\n", (void *)px); // => \u8f93\u51fa\u5185\u5b58\u4e2d\u7684\u67d0\u4e2a\u5730\u5740\nprintf("%zu, %zu\\n", sizeof(px), sizeof(not_a_pointer));\n// => \u572864\u4f4d\u7cfb\u7edf\u4e0a\u6253\u5370\u201c8\uff0c 4\u201d\u3002\n\n// \u8981\u5f97\u5230\u67d0\u4e2a\u6307\u9488\u6307\u5411\u7684\u5185\u5bb9\u7684\u503c\uff0c\u53ef\u4ee5\u5728\u6307\u9488\u524d\u52a0\u4e00\u4e2a*\u6765\u53d6\u5f97\uff08\u53d6\u6d88\u5f15\u7528\uff09\n// \u6ce8\u610f\uff1a \u662f\u7684\uff0c\u8fd9\u53ef\u80fd\u8ba9\u4eba\u56f0\u60d1\uff0c\'*\'\u5728\u7528\u6765\u58f0\u660e\u4e00\u4e2a\u6307\u9488\u7684\u540c\u65f6\u53d6\u6d88\u5f15\u7528\u5b83\u3002\nprintf("%d\\n", *px); // => \u8f93\u51fa 0, \u5373x\u7684\u503c\n\n// \u4f60\u4e5f\u53ef\u4ee5\u6539\u53d8\u6307\u9488\u6240\u6307\u5411\u7684\u503c\n// \u6b64\u65f6\u4f60\u9700\u8981\u53d6\u6d88\u5f15\u7528\u4e0a\u6dfb\u52a0\u62ec\u53f7\uff0c\u56e0\u4e3a++\u6bd4*\u7684\u4f18\u5148\u7ea7\u66f4\u9ad8\n(*px)++; // \u628apx\u6240\u6307\u5411\u7684\u503c\u589e\u52a01\nprintf("%d\\n", *px); // => \u8f93\u51fa 1\nprintf("%d\\n", x); // => \u8f93\u51fa 1\n\n// \u6570\u7ec4\u662f\u5206\u914d\u4e00\u7cfb\u5217\u8fde\u7eed\u7a7a\u95f4\u7684\u5e38\u7528\u65b9\u5f0f\nint x_array[20];\nint xx;\nfor (xx=0; xx<20; xx++) {\n    x_array[xx] = 20 - xx;\n} // \u521d\u59cb\u5316 x_array \u4e3a 20, 19, 18,... 2, 1\n\n// \u58f0\u660e\u4e00\u4e2a\u6574\u578b\u7684\u6307\u9488\uff0c\u5e76\u521d\u59cb\u5316\u4e3a\u6307\u5411x_array\nint* x_ptr = x_array;\n// x_ptr\u73b0\u5728\u6307\u5411\u4e86\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20(\u5373\u6574\u657020). \n// \u8fd9\u662f\u56e0\u4e3a\u6570\u7ec4\u901a\u5e38\u8870\u51cf\u4e3a\u6307\u5411\u5b83\u4eec\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u6307\u9488\u3002\n// \u4f8b\u5982\uff0c\u5f53\u4e00\u4e2a\u6570\u7ec4\u88ab\u4f20\u9012\u7ed9\u4e00\u4e2a\u51fd\u6570\u6216\u8005\u7ed1\u5b9a\u5230\u4e00\u4e2a\u6307\u9488\u65f6\uff0c\n//\u5b83\u8870\u51cf\u4e3a(\u9690\u5f0f\u8f6c\u5316\u4e3a\uff09\u4e00\u4e2a\u6307\u9488\u3002\n// \u4f8b\u5916\uff1a \u5f53\u6570\u7ec4\u662f`&`\u64cd\u4f5c\u7b26\u7684\u53c2\u6570\uff1a\nint arr[10];\nint (*ptr_to_arr)[10] = &arr; // &arr\u7684\u7c7b\u578b\u4e0d\u662f`int *`\uff01\n                              // \u5b83\u7684\u7c7b\u578b\u662f\u6307\u5411\u6570\u7ec4\u7684\u6307\u9488\uff08\u6570\u7ec4\u753110\u4e2aint\u7ec4\u6210\uff09\n// \u6216\u8005\u5f53\u6570\u7ec4\u662f\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\uff08\u521d\u59cb\u5316\u5b57\u7b26\u6570\u7ec4\uff09\nchar arr[] = "foobarbazquirk";\n// \u6216\u8005\u5f53\u5b83\u662f`sizeof`\u6216`alignof`\u64cd\u4f5c\u7b26\u7684\u53c2\u6570\u65f6\uff1a\nint arr[10];\nint *ptr = arr; // \u7b49\u4ef7\u4e8e int *ptr = &arr[0];\nprintf("%zu, %zu\\n", sizeof arr, sizeof ptr); // \u5e94\u8be5\u4f1a\u8f93\u51fa"40, 4"\u6216"40, 8"\n\n// \u6307\u9488\u7684\u589e\u51cf\u591a\u5c11\u662f\u4f9d\u636e\u5b83\u672c\u8eab\u7684\u7c7b\u578b\u800c\u5b9a\u7684\n// \uff08\u8fd9\u88ab\u79f0\u4e3a\u6307\u9488\u7b97\u672f\uff09\nprintf("%d\\n", *(x_ptr + 1)); // => \u6253\u5370 19\nprintf("%d\\n", x_array[1]); // => \u6253\u5370 19\n\n// \u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7\u6807\u51c6\u5e93\u51fd\u6570malloc\u6765\u5b9e\u73b0\u52a8\u6001\u5206\u914d\n// \u8fd9\u4e2a\u51fd\u6570\u63a5\u53d7\u4e00\u4e2a\u4ee3\u8868\u5bb9\u91cf\u7684\u53c2\u6570\uff0c\u53c2\u6570\u7c7b\u578b\u4e3a`size_t`\n// \u7cfb\u7edf\u4e00\u822c\u4f1a\u4ece\u5806\u533a\u5206\u914d\u6307\u5b9a\u5bb9\u91cf\u5b57\u8282\u5927\u5c0f\u7684\u7a7a\u95f4\n// \uff08\u5728\u4e00\u4e9b\u7cfb\u7edf\uff0c\u4f8b\u5982\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d\u8fd9\u70b9\u4e0d\u4e00\u5b9a\u6210\u7acb\n// C\u6807\u51c6\u5bf9\u6b64\u672a\u7f6e\u4e00\u8bcd\u3002\uff09\nint *my_ptr = malloc(sizeof(*my_ptr) * 20);\nfor (xx=0; xx<20; xx++) {\n    *(my_ptr + xx) = 20 - xx; // my_ptr[xx] = 20-xx\n} // \u521d\u59cb\u5316\u5185\u5b58\u4e3a 20, 19, 18, 17... 2, 1 (\u7c7b\u578b\u4e3aint\uff09\n\n// \u5bf9\u672a\u5206\u914d\u7684\u5185\u5b58\u8fdb\u884c\u53d6\u6d88\u5f15\u7528\u4f1a\u4ea7\u751f\u672a\u5b9a\u4e49\u7684\u7ed3\u679c\nprintf("%d\\n", *(my_ptr + 21)); // => \u8c01\u77e5\u9053\u4f1a\u8f93\u51fa\u4ec0\u4e48\n\n// malloc\u5206\u914d\u7684\u533a\u57df\u9700\u8981\u624b\u52a8\u91ca\u653e\n// \u5426\u5219\u6ca1\u4eba\u80fd\u591f\u518d\u6b21\u4f7f\u7528\u8fd9\u5757\u5185\u5b58\uff0c\u76f4\u5230\u7a0b\u5e8f\u7ed3\u675f\u4e3a\u6b62\nfree(my_ptr);\n\n// \u5b57\u7b26\u4e32\u901a\u5e38\u662f\u5b57\u7b26\u6570\u7ec4\uff0c\u4f46\u662f\u7ecf\u5e38\u7528\u5b57\u7b26\u6307\u9488\u8868\u793a\n// (\u5b83\u662f\u6307\u5411\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u6307\u9488)\n// \u4e00\u4e2a\u4f18\u826f\u7684\u5b9e\u8df5\u662f\u4f7f\u7528`const char *`\u6765\u5f15\u7528\u4e00\u4e2a\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\uff0c\n// \u56e0\u4e3a\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u4e0d\u5e94\u5f53\u88ab\u4fee\u6539\uff08\u5373"foo"[0] = \'a\'\u72af\u4e86\u5927\u5fcc\uff09\nconst char* my_str = "This is my very own string";\nprintf("%c\\n", *my_str); // => \'T\'\n\n// \u5982\u679c\u5b57\u7b26\u4e32\u662f\u6570\u7ec4\uff0c\uff08\u591a\u534a\u662f\u7528\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u521d\u59cb\u5316\u7684\uff09\n// \u60c5\u51b5\u5c31\u4e0d\u4e00\u6837\u4e86\uff0c\u5b57\u7b26\u4e32\u4f4d\u4e8e\u53ef\u5199\u7684\u5185\u5b58\u4e2d\nchar foo[] = "foo";\nfoo[0] = \'a\'; // \u8fd9\u662f\u5408\u6cd5\u7684\uff0cfoo\u73b0\u5728\u5305\u542b"aoo"\n\nfunction_1();\n} // main\u51fd\u6570\u7ed3\u675f\n\n///////////////////////////////////////\n// \u51fd\u6570\n///////////////////////////////////////\n\n// \u51fd\u6570\u58f0\u660e\u8bed\u6cd5:\n// <\u8fd4\u56de\u503c\u7c7b\u578b> <\u51fd\u6570\u540d\u79f0>(<\u53c2\u6570>)\n\nint add_two_ints(int x1, int x2){\n    return x1 + x2; // \u7528return\u6765\u8fd4\u56de\u4e00\u4e2a\u503c\n}\n\n/*\n\u51fd\u6570\u662f\u6309\u503c\u4f20\u9012\u7684\u3002\u5f53\u8c03\u7528\u4e00\u4e2a\u51fd\u6570\u7684\u65f6\u5019\uff0c\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u53c2\u6570\n\u662f\u539f\u6709\u503c\u7684\u62f7\u8d1d\uff08\u6570\u7ec4\u9664\u5916\uff09\u3002\u4f60\u5728\u51fd\u6570\u5185\u5bf9\u53c2\u6570\u6240\u8fdb\u884c\u7684\u64cd\u4f5c\n\u4e0d\u4f1a\u6539\u53d8\u8be5\u53c2\u6570\u539f\u6709\u7684\u503c\u3002\n\n\u4f46\u662f\u4f60\u53ef\u4ee5\u901a\u8fc7\u6307\u9488\u6765\u4f20\u9012\u5f15\u7528\uff0c\u8fd9\u6837\u51fd\u6570\u5c31\u53ef\u4ee5\u66f4\u6539\u503c\n\n\u4f8b\u5b50\uff1a\u5b57\u7b26\u4e32\u672c\u8eab\u7ffb\u8f6c\n*/\n\n// \u7c7b\u578b\u4e3avoid\u7684\u51fd\u6570\u6ca1\u6709\u8fd4\u56de\u503c\nvoid str_reverse(char *str_in){\n    char tmp;\n    int ii = 0;\n    size_t len = strlen(str_in); // `strlen()`` \u662fC\u6807\u51c6\u5e93\u51fd\u6570\n    for(ii = 0; ii < len / 2; ii++){\n        tmp = str_in[ii];\n        str_in[ii] = str_in[len - ii - 1]; // \u4ece\u5012\u6570\u7b2cii\u4e2a\u5f00\u59cb\n        str_in[len - ii - 1] = tmp;\n    }\n}\n\n/*\nchar c[] = "This is a test.";\nstr_reverse(c);\nprintf("%s\\n", c); // => ".tset a si sihT"\n*/\n\n// \u5982\u679c\u5f15\u7528\u51fd\u6570\u4e4b\u5916\u7684\u53d8\u91cf\uff0c\u5fc5\u987b\u4f7f\u7528extern\u5173\u952e\u5b57\nint i = 0;\nvoid testFunc() {\n    extern int i; // \u4f7f\u7528\u5916\u90e8\u53d8\u91cf i\n}\n\n// \u4f7f\u7528static\u786e\u4fddexternal\u53d8\u91cf\u4e3a\u6e90\u6587\u4ef6\u79c1\u6709\nstatic int i = 0; // \u5176\u4ed6\u4f7f\u7528 testFunc()\u7684\u6587\u4ef6\u65e0\u6cd5\u8bbf\u95ee\u53d8\u91cfi\nvoid testFunc() {\n    extern int i;\n}\n//**\u4f60\u540c\u6837\u53ef\u4ee5\u58f0\u660e\u51fd\u6570\u4e3astatic**\n\n\n///////////////////////////////////////\n// \u7528\u6237\u81ea\u5b9a\u4e49\u7c7b\u578b\u548c\u7ed3\u6784\n///////////////////////////////////////\n\n// Typedefs\u53ef\u4ee5\u521b\u5efa\u7c7b\u578b\u522b\u540d\ntypedef int my_type;\nmy_type my_type_var = 0;\n\n// struct\u662f\u6570\u636e\u7684\u96c6\u5408\uff0c\u6210\u5458\u4f9d\u5e8f\u5206\u914d\uff0c\u6309\u7167\n// \u7f16\u5199\u7684\u987a\u5e8f\nstruct rectangle {\n    int width;\n    int height;\n};\n\n// \u4e00\u822c\u800c\u8a00\uff0c\u4ee5\u4e0b\u65ad\u8a00\u4e0d\u6210\u7acb\uff1a\n// sizeof(struct rectangle) == sizeof(int) + sizeof(int)\n//\u8fd9\u662f\u56e0\u4e3astructure\u6210\u5458\u4e4b\u95f4\u53ef\u80fd\u5b58\u5728\u6f5c\u5728\u7684\u95f4\u9699\uff08\u4e3a\u4e86\u5bf9\u9f50\uff09[1]\n\nvoid function_1(){\n\n    struct rectangle my_rec;\n\n    // \u901a\u8fc7 . \u6765\u8bbf\u95ee\u7ed3\u6784\u4e2d\u7684\u6570\u636e\n    my_rec.width = 10;\n    my_rec.height = 20;\n\n    // \u4f60\u4e5f\u53ef\u4ee5\u58f0\u660e\u6307\u5411\u7ed3\u6784\u4f53\u7684\u6307\u9488\n    struct rectangle *my_rec_ptr = &my_rec;\n\n    // \u901a\u8fc7\u53d6\u6d88\u5f15\u7528\u6765\u6539\u53d8\u7ed3\u6784\u4f53\u7684\u6210\u5458...\n    (*my_rec_ptr).width = 30;\n\n    // ... \u6216\u8005\u7528 -> \u64cd\u4f5c\u7b26\u4f5c\u4e3a\u7b80\u5199\u63d0\u9ad8\u53ef\u8bfb\u6027\n    my_rec_ptr->height = 10; // Same as (*my_rec_ptr).height = 10;\n}\n\n// \u4f60\u4e5f\u53ef\u4ee5\u7528typedef\u6765\u7ed9\u4e00\u4e2a\u7ed3\u6784\u4f53\u8d77\u4e00\u4e2a\u522b\u540d\ntypedef struct rectangle rect;\n\nint area(rect r){\n    return r.width * r.height;\n}\n\n// \u5982\u679cstruct\u8f83\u5927\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u6307\u9488\u4f20\u9012\uff0c\u907f\u514d\n// \u590d\u5236\u6574\u4e2astruct\u3002\nint area(const rect *r)\n{\n    return r->width * r->height;\n}\n\n///////////////////////////////////////\n// \u51fd\u6570\u6307\u9488\n///////////////////////////////////////\n/*\n\u5728\u8fd0\u884c\u65f6\uff0c\u51fd\u6570\u672c\u8eab\u4e5f\u88ab\u5b58\u653e\u5230\u67d0\u5757\u5185\u5b58\u533a\u57df\u5f53\u4e2d\n\u51fd\u6570\u6307\u9488\u5c31\u50cf\u5176\u4ed6\u6307\u9488\u4e00\u6837\uff08\u4e0d\u8fc7\u662f\u5b58\u50a8\u4e00\u4e2a\u5185\u5b58\u5730\u5740\uff09 \u4f46\u5374\u53ef\u4ee5\u88ab\u7528\u6765\u76f4\u63a5\u8c03\u7528\u51fd\u6570,\n\u5e76\u4e14\u53ef\u4ee5\u56db\u5904\u4f20\u9012\u56de\u8c03\u51fd\u6570\n\u4f46\u662f\uff0c\u5b9a\u4e49\u7684\u8bed\u6cd5\u521d\u770b\u4ee4\u4eba\u6709\u4e9b\u8ff7\u60d1\n\n\u4f8b\u5b50\uff1a\u901a\u8fc7\u6307\u9488\u8c03\u7528str_reverse\n*/\nvoid str_reverse_through_pointer(char *str_in) {\n    // \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\u6307\u9488 f. \n    void (*f)(char *); // \u7b7e\u540d\u4e00\u5b9a\u8981\u4e0e\u76ee\u6807\u51fd\u6570\u76f8\u540c\n    f = &str_reverse; // \u5c06\u51fd\u6570\u7684\u5730\u5740\u5728\u8fd0\u884c\u65f6\u8d4b\u7ed9\u6307\u9488\n    (*f)(str_in); // \u901a\u8fc7\u6307\u9488\u8c03\u7528\u51fd\u6570\n    // f(str_in); // \u7b49\u4ef7\u4e8e\u8fd9\u79cd\u8c03\u7528\u65b9\u5f0f\n}\n\n/*\n\u53ea\u8981\u51fd\u6570\u7b7e\u540d\u662f\u6b63\u786e\u7684\uff0c\u4efb\u4f55\u65f6\u5019\u90fd\u80fd\u5c06\u4efb\u4f55\u51fd\u6570\u8d4b\u7ed9\u67d0\u4e2a\u51fd\u6570\u6307\u9488\n\u4e3a\u4e86\u53ef\u8bfb\u6027\u548c\u7b80\u6d01\u6027\uff0c\u51fd\u6570\u6307\u9488\u7ecf\u5e38\u548ctypedef\u642d\u914d\u4f7f\u7528\uff1a\n*/\n\ntypedef void (*my_fnp_type)(char *);\n\n// \u5b9e\u9645\u58f0\u660e\u51fd\u6570\u6307\u9488\u4f1a\u8fd9\u4e48\u7528:\n// ...\n// my_fnp_type f; \n\n// \u7279\u6b8a\u5b57\u7b26\n\'\\a\' // bell\n\'\\n\' // \u6362\u884c\n\'\\t\' // tab\n\'\\v\' // vertical tab\n\'\\f\' // formfeed\n\'\\r\' // \u56de\u8f66\n\'\\b\' // \u9000\u683c\n\'\\0\' // null\uff0c\u901a\u5e38\u7f6e\u4e8e\u5b57\u7b26\u4e32\u7684\u6700\u540e\u3002\n     //   hello\\n\\0. \u6309\u7167\u60ef\u4f8b\uff0c\\0\u7528\u4e8e\u6807\u8bb0\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u3002\n\'\\\\\' // \u53cd\u659c\u6760\n\'\\?\' // \u95ee\u53f7\n\'\\\'\' // \u5355\u5f15\u53f7\n\'\\"\' // \u53cc\u5f15\u53f7\n\'\\xhh\' // \u5341\u516d\u8fdb\u5236\u6570\u5b57. \u4f8b\u5b50: \'\\xb\' = vertical tab\n\'\\ooo\' // \u516b\u8fdb\u5236\u6570\u5b57. \u4f8b\u5b50: \'\\013\' = vertical tab\n\n// \u6253\u5370\u683c\u5f0f\uff1a\n"%d"    // \u6574\u6570\n"%3d"   // 3\u4f4d\u4ee5\u4e0a\u6574\u6570 \uff08\u53f3\u5bf9\u9f50\u6587\u672c\uff09\n"%s"    // \u5b57\u7b26\u4e32\n"%f"    // float\n"%ld"   // long\n"%3.2f" // \u5de63\u4f4d\u4ee5\u4e0a\u3001\u53f32\u4f4d\u4ee5\u4e0a\u5341\u8fdb\u5236\u6d6e\n"%7.4s" // (\u5b57\u7b26\u4e32\u540c\u6837\u9002\u7528)\n"%c"    // \u5b57\u6bcd\n"%p"    // \u6307\u9488\n"%x"    // \u5341\u516d\u8fdb\u5236\n"%o"    // \u516b\u8fdb\u5236\n"%%"    // \u6253\u5370 %\n\n///////////////////////////////////////\n// \u6f14\u7b97\u4f18\u5148\u7ea7\n///////////////////////////////////////\n//---------------------------------------------------//\n//        \u64cd\u4f5c\u7b26                     | \u7ec4\u5408          //\n//---------------------------------------------------//\n// () [] -> .                        | \u4ece\u5de6\u5230\u53f3      //\n// ! ~ ++ -- + = *(type)sizeof       | \u4ece\u53f3\u5230\u5de6      //\n// * / %                             | \u4ece\u5de6\u5230\u53f3      //\n// + -                               | \u4ece\u5de6\u5230\u53f3      //\n// << >>                             | \u4ece\u5de6\u5230\u53f3      //\n// < <= > >=                         | \u4ece\u5de6\u5230\u53f3      //\n// == !=                             | \u4ece\u5de6\u5230\u53f3      //\n// &                                 | \u4ece\u5de6\u5230\u53f3      //\n// ^                                 | \u4ece\u5de6\u5230\u53f3      //\n// |                                 | \u4ece\u5de6\u5230\u53f3      //\n// &&                                | \u4ece\u5de6\u5230\u53f3      //\n// ||                                | \u4ece\u5de6\u5230\u53f3      //\n// ?:                                | \u4ece\u53f3\u5230\u5de6      //\n// = += -= *= /= %= &= ^= |= <<= >>= | \u4ece\u53f3\u5230\u5de6      //\n// ,                                 | \u4ece\u5de6\u5230\u53f3      //\n//---------------------------------------------------//\n')),(0,i.yg)("h2",{id:"\u66f4\u591a\u9605\u8bfb"},"\u66f4\u591a\u9605\u8bfb"),(0,i.yg)("p",null,"\u6700\u597d\u627e\u4e00\u672c ",(0,i.yg)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/The_C_Programming_Language"},"K&R, aka \u201cThe C Programming Language\u201d, \u201cC\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u201d"),"\u3002\u5b83\u662f\u5173\u4e8eC\u6700\u91cd\u8981\u7684\u4e00\u672c\u4e66\uff0c\u7531C\u7684\u521b\u4f5c\u8005\u64b0\u5199\u3002\u4e0d\u8fc7\u9700\u8981\u7559\u610f\u7684\u662f\u5b83\u6bd4\u8f83\u53e4\u8001\u4e86\uff0c\u56e0\u6b64\u6709\u4e9b\u4e0d\u51c6\u786e\u7684\u5730\u65b9\u3002"),(0,i.yg)("p",null,"\u53e6\u4e00\u4e2a\u6bd4\u8f83\u597d\u7684\u8d44\u6e90\u662f ",(0,i.yg)("a",{parentName:"p",href:"http://learncodethehardway.org/c/"},"Learn C the hard way")),(0,i.yg)("p",null,"\u5982\u679c\u4f60\u6709\u95ee\u9898\uff0c\u8bf7\u9605\u8bfb",(0,i.yg)("a",{parentName:"p",href:"http://c-faq.com/"},"compl.lang.c Frequently Asked Questions"),"\u3002"),(0,i.yg)("p",null,"\u4f7f\u7528\u5408\u9002\u7684\u7a7a\u683c\u3001\u7f29\u8fdb\uff0c\u4fdd\u6301\u4e00\u81f4\u7684\u4ee3\u7801\u98ce\u683c\u975e\u5e38\u91cd\u8981\u3002\u53ef\u8bfb\u6027\u5f3a\u7684\u4ee3\u7801\u6bd4\u806a\u660e\u7684\u4ee3\u7801\u3001\u9ad8\u901f\u7684\u4ee3\u7801\u66f4\u91cd\u8981\u3002\u53ef\u4ee5\u53c2\u8003\u4e0b",(0,i.yg)("a",{parentName:"p",href:"https://www.kernel.org/doc/Documentation/CodingStyle"},"Linux\u5185\u6838\u7f16\u7801\u98ce\u683c")," \u3002 \u9664\u4e86\u8fd9\u4e9b\uff0c\u591a\u591aGoogle\u5427"),(0,i.yg)("p",null,"[1]"," ",(0,i.yg)("a",{parentName:"p",href:"http://stackoverflow.com/questions/119123/why-isnt-sizeof-for-a-struct-equal-to-the-sum-of-sizeof-of-each-member"},"http://stackoverflow.com/questions/119123/why-isnt-sizeof-for-a-struct-equal-to-the-sum-of-sizeof-of-each-member")))}l.isMDXComponent=!0},5680:(n,t,e)=>{e.d(t,{xA:()=>p,yg:()=>y});var r=e(6540);function i(n,t,e){return t in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}function a(n,t){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),e.push.apply(e,r)}return e}function o(n){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?a(Object(e),!0).forEach((function(t){i(n,t,e[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):a(Object(e)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(e,t))}))}return n}function s(n,t){if(null==n)return{};var e,r,i=function(n,t){if(null==n)return{};var e,r,i={},a=Object.keys(n);for(r=0;r<a.length;r++)e=a[r],t.indexOf(e)>=0||(i[e]=n[e]);return i}(n,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);for(r=0;r<a.length;r++)e=a[r],t.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(n,e)&&(i[e]=n[e])}return i}var c=r.createContext({}),f=function(n){var t=r.useContext(c),e=t;return n&&(e="function"==typeof n?n(t):o(o({},t),n)),e},p=function(n){var t=f(n.components);return r.createElement(c.Provider,{value:t},n.children)},l="mdxType",u={inlineCode:"code",wrapper:function(n){var t=n.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(n,t){var e=n.components,i=n.mdxType,a=n.originalType,c=n.parentName,p=s(n,["components","mdxType","originalType","parentName"]),l=f(e),h=i,y=l["".concat(c,".").concat(h)]||l[h]||u[h]||a;return e?r.createElement(y,o(o({ref:t},p),{},{components:e})):r.createElement(y,o({ref:t},p))}));function y(n,t){var e=arguments,i=t&&t.mdxType;if("string"==typeof n||i){var a=e.length,o=new Array(a);o[0]=h;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=n,s[l]="string"==typeof n?n:i,o[1]=s;for(var f=2;f<a;f++)o[f]=e[f];return r.createElement.apply(null,o)}return r.createElement.apply(null,e)}h.displayName="MDXCreateElement"}}]);